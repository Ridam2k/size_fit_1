# -*- coding: utf-8 -*-
"""preprocess.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EPNNKsFOpjzGa9Vbad6FXSgmdhAjo58V
"""


'''''Importing libraries'''

import pandas as pd
import numpy as np
li = []


# def height_in_cms(ht):
#     if ht.lower() != 'nan':
#         ht = ht.replace("'", '').replace('"', '')
#         h_ft = int(ht.split()[0])
#         if len(ht.split()) > 1:
#             h_inch = int(ht.split()[1])
#         else:
#             h_inch = 0
#         h_inch += h_ft * 12
#         h_cm = round(h_inch * 2.54, 1)
#         return h_cm


# def clean_weight(wt):
#     if wt.lower() != 'nan':
#         wt = int(wt[:-3])
#         # print (type(wt))
#         return int(wt*0.453592)


def get_cup_size(bust_size):
    x = bust_size
    y = ""
    if x.lower() != 'nan':
        if len(x) == 7:
            # bt = x[:2]
            y = x[2:]
        elif len(x) == 3:
            # bt = x[:-1]
            y = x[-1]
        else:
            # bt = x[:-2]
            y = x[-2] + x[-1]
        return y
    else:
        y = "nan"
        return y


def remove_cup_size(bust_size):
    x = bust_size
    if x.lower() != 'nan':
        if len(x) == 7:
            bt = x[:2]
        elif len(x) == 3:
            bt = x[:-1]
        else:
            bt = x[:-2]
        return int(bt)


def convert_cup_size_to_cms(cup_size_code):
    if cup_size_code == 'aa':
        return 10, 11
    if cup_size_code == 'a':
        return 12, 13
    if cup_size_code == 'b':
        return 14, 15
    if cup_size_code == 'c':
        return 16, 17
    if cup_size_code == 'd':
        return 18, 19
    if cup_size_code == 'dd/e':
        return 20, 21
    if cup_size_code == 'ddd/f':
        return 22, 23
    if cup_size_code == 'dddd/g':
        return 24, 25
    if cup_size_code == 'h':
        return 26, 27
    if cup_size_code == 'i':
        return 28, 29
    if cup_size_code == 'j':
        return 30, 31
    if cup_size_code == 'k':
        return 32, 33
    else:
        return str('unknown')


def split_cup_size_data(data, index):
    if data.lower() == 'unknown':
        return 0
    value = data.replace('(', '').replace(')', '').replace(',', '')
    return value.split()[index]


def clean_cup(df):
    df['cup_size_start_in_cms'] = df.cup_size_start_in_cms.astype('int')
    df['cup_size_end_in_cms'] = df.cup_size_end_in_cms.astype('int')


body = {'hourglass': 1, 'straight & narrow': 2, 'pear': 3, 'athletic': 4,
        'full bust': 5, 'petite': 6, 'apple': 7, 'unknown': 8}

category_dummies = {'romper': 1, 'gown': 2, 'sheath': 3, 'dress': 4, 'leggings': 5, 'top': 6, 'jumpsuit': 7,
                    'sweater': 8, 'jacket': 9, 'shirtdress': 10, 'maxi': 11, 'shift': 12, 'pants': 13,
                    'shirt': 14, 'mini': 15, 'skirt': 16, 'pullover': 17, 'blouse': 18, 'suit': 19, 'coat': 20,
                    'trench': 21, 'bomber': 22, 'cape': 23, 'blazer': 24, 'vest': 25, 'duster': 26, 'tank': 27,
                    'poncho': 28, 'frock': 29, 'tunic': 30, 'cardigan': 31, 'culottes': 32, 'down': 33,
                    'trouser': 34, 'midi': 35, 'pant': 36, 'legging': 37, 'print': 38, 'knit': 39, 'culotte': 40,
                    'sweatshirt': 41, 'peacoat': 42, 'kaftan': 43, 'overalls': 44, 'jogger': 45, 'tee': 46,
                    'combo': 47, 'henley': 48, 'cami': 49, 'blouson': 50, 'turtleneck': 51, 'trousers': 52,
                    'overcoat': 53, 'hoodie': 54, 't-shirt': 55, 'caftan': 56, 'tight': 57, 'ballgown': 58,
                    'kimono': 59, 'for': 60, 'crewneck': 61, 'skirts': 62, 'parka': 63, 'buttondown': 64,
                    'skort': 65, 'sweatershirt': 66, 'sweatpants': 67, 'jeans': 68}

fit = {'small': 0, 'fit': 1, 'large': 2}


def clean(df):
    df.columns = df.columns.str.replace(' ', '_')
    # df.drop(columns =['user_id','item_id','rented_for','review_text','review_summary','review_date'], inplace=True)

    # df.height = df.height.astype(str).apply(height_in_cms)
    # df.weight = df.weight.astype(str).apply(clean_weight)
    df['cup_size'] = ""
    df.cup_size = df.bust_size.astype(str).apply(get_cup_size)
    df.bust_size = df.bust_size.astype(str).apply(remove_cup_size)

    df['cup_size_in_cms'] = df.cup_size.apply(convert_cup_size_to_cms)
    df['cup_size_start_in_cms'] = df.cup_size_in_cms.astype(
        str).apply(lambda x: split_cup_size_data(x, 0))
    df['cup_size_end_in_cms'] = df.cup_size_in_cms.astype(
        str).apply(lambda x: split_cup_size_data(x, 1))
    clean_cup(df)

    df['fit'] = df['fit'].map(fit)
    df['body_type'] = df['body_type'].map(body)
    df['category'] = df['category'].map(category_dummies)


def main():
    df = pd.read_csv("data.csv")
    clean(df)
    df = df.drop(['cup_size', 'cup_size_in_cms'], axis=1)
    df.reset_index(drop=True,  inplace=True)
    df.to_csv('testing.csv')


if __name__ == "__main__":
    main()


# print(df.head())
